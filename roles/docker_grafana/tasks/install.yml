- name: Create application user
  ansible.builtin.user:
    name: grafana
    create_home: false
    shell: /sbin/nologin
  register: created_grafana_user

- name: Display created users
  ansible.builtin.debug:
    msg: "User: uid:{{ created_grafana_user.uid }} name:{{ created_grafana_user.name }} group:{{ created_grafana_user.group }}"

- name: Create config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: grafana
    group: grafana
    mode: "0755"
  loop:
    - "{{ grafana_etc_path }}"
    - "{{ grafana_etc_path }}/dashboards"
    - "{{ grafana_etc_path }}/provisioning"
    - "{{ grafana_etc_path }}/provisioning/dashboards"
    - "{{ grafana_etc_path }}/provisioning/datasources"
    - "{{ grafana_etc_path }}/provisioning/notifiers"
    - "{{ grafana_etc_path }}/provisioning/plugins"

- name: Create data directory
  ansible.builtin.file:
    path: "{{ grafana_data_path }}"
    state: directory
    owner: grafana
    group: grafana
    mode: "0775"

- name: Create backup directory
  ansible.builtin.file:
    path: "{{ grafana_backup_path }}"
    state: directory
    owner: grafana
    group: grafana
    mode: "0775"

- name: Create service configuration
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: "{{ grafana_etc_path }}/grafana.ini"
    owner: grafana
    group: grafana
    mode: "0644"
  no_log: false

- name: Define environment variables
  ansible.builtin.template:
    src: grafana.env.j2
    dest: /etc/grafana.env
    owner: grafana
    group: grafana
    mode: "0644"
  notify: Restart grafana service

- name: Create datasources configuration
  ansible.builtin.template:
    src: datasources.yml.j2
    dest: "{{ grafana_etc_path }}/provisioning/datasources/datasources.yml"
    owner: grafana
    group: grafana
    mode: "0644"
  no_log: false

- name: Create dashboards configuration
  ansible.builtin.template:
    src: dashboards.yml.j2
    dest: "{{ grafana_etc_path }}/provisioning/dashboards/dashboards.yml"
    owner: grafana
    group: grafana
    mode: "0644"

- name: Create dashboards
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ grafana_etc_path }}/dashboards"
    owner: grafana
    group: grafana
    mode: "0644"
  with_fileglob:
    - roles/docker_grafana/files/dashboards/*.json

- name: Define Docker container labels
  ansible.builtin.template:
    src: grafana.label.j2
    dest: /etc/grafana.label
    owner: grafana
    group: grafana
    mode: "0644"

- name: Pull Docker image
  community.docker.docker_image:
    name: "{{ grafana_docker_image }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: grafana.service.j2
    dest: /etc/systemd/system/grafana.service
    owner: grafana
    group: grafana
    mode: "0644"

- name: Start and enable service
  ansible.builtin.systemd:
    name: grafana
    state: started
    enabled: true
    daemon_reload: true

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers

- name: Wait for service to become available
  ansible.builtin.uri:
    url: "http://localhost:{{ grafana_port }}/"
  register: result
  until: result.status == 200
  retries: 60
  delay: 1
