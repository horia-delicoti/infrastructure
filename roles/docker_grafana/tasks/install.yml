---
- name: Create required directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: horia
    group: horia
    mode: "755"
  with_items:
    - "{{ grafana_home_dir }}"
    - "{{ grafana_data_dir }}"
    - "{{ grafana_config_dir }}"
    - "{{ grafana_config_dir }}/dashboards"
    - "{{ grafana_config_dir }}/provisioning"
    - "{{ grafana_config_dir }}/provisioning/dashboards"
    - "{{ grafana_config_dir }}/provisioning/datasources"
    - "{{ grafana_config_dir }}/provisioning/notifiers"
    - "{{ grafana_config_dir }}/provisioning/plugins"
    - "{{ grafana_config_dir }}/provisioning/alerting"
    - "{{ grafana_config_dir }}/provisioning/access-control"

- name: Copy grafana docker compose file
  ansible.builtin.template:
    force: true
    src: "docker-compose.yaml.j2"
    dest: "{{ grafana_home_dir }}/docker-compose.yaml"
    owner: horia
    group: horia
    mode: "644"

- name: Create grafana configuration file
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: "{{ grafana_config_dir }}/grafana.ini"
    owner: horia
    group: horia
    mode: "0644"
  no_log: false

- name: Define environment variables
  ansible.builtin.template:
    src: grafana.env.j2
    dest: "{{ grafana_config_dir }}/grafana.env"
    owner: horia
    group: horia
    mode: "0644"

- name: Copy grafana config file
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ grafana_config_dir }}/"
    owner: horia
    group: horia
    mode: '0644'
  with_fileglob:
    - roles/docker_grafana/files/ldap.toml

- name: Create dashboards configuration
  ansible.builtin.template:
    src: dashboards.yml.j2
    dest: "{{ grafana_config_dir }}/provisioning/dashboards/dashboards.yml"
    owner: horia
    group: horia
    mode: "0644"

- name: Create dashboards
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ grafana_config_dir }}/dashboards"
    owner: horia
    group: horia
    mode: "0644"
  with_fileglob:
    - roles/docker_grafana/files/dashboards/*.json

- name: Start container using docker compose
  community.docker.docker_compose:
    project_src: "{{ grafana_home_dir }}"
    files:
    - docker-compose.yaml
  register: output

- name: Output log of docker
  ansible.builtin.debug:
    var: output

- name: Wait for service to become available
  ansible.builtin.uri:
    url: "http://{{ grafana_host }}:{{ grafana_port }}/"
  register: result
  until: result.status == 200
  retries: 60
  delay: 1
