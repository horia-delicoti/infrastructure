---
- name: Create prometheus system group
  ansible.builtin.group:
    name: prometheus
    system: true
    state: present

- name: Create application user
  ansible.builtin.user:
    name: prometheus
    system: true
    shell: "/usr/sbin/nologin"
    group: prometheus
    createhome: false
    home: "{{ prometheus_data_dir }}"
  register: created_prometheus_user

- name: Display created users
  ansible.builtin.debug:
    msg: "User: uid:{{ created_prometheus_user.uid }} name:{{ created_prometheus_user.name }} group:{{ created_prometheus_user.group }}"

- name: Create prometheus data directory
  ansible.builtin.file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0755"

- name: Create prometheus configuration directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: prometheus
    mode: "0770"
  with_items:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/rules"

- name: Get prometheus binary
  block:
    - name: Download prometheus binary to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ prometheus_url }}"
        dest: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
        mode: "0644"
        validate_certs: false
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2

    - name: Unpack prometheus binaries
      become: false
      ansible.builtin.unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
        remote_src: true

    - name: Propagate official prometheus and promtool binaries
      ansible.builtin.copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "{{ prometheus_binary_install_dir }}/{{ item }}"
        mode: "0755"
        owner: root
        group: root
        remote_src: true
      with_items:
        - prometheus
        - promtool

- name: Create prometheus configuration file
  become: true
  ansible.builtin.template:
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    src: prometheus-config.yml.j2
    owner: prometheus
    group: prometheus
    mode: "0640"

# - name: Configure prometheus static targets
#   copy:
#     content: |
#       {{ item.value | to_nice_yaml(indent=2, sort_keys=False) }}
#     dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
#     force: true
#     owner: prometheus
#     group: prometheus
#     mode: 0640
#   with_dict: "{{ prometheus_targets }}"
#   when: prometheus_targets != {}

# - name: Alerting rules file
#   ansible.builtin.template:
#     src: "alert.rules.j2"
#     dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
#     owner: prometheus
#     group: prometheus
#     mode: 0640
#     validate: "{{ prometheus_binary_install_dir }}/promtool check rules %s"
#   when:
#     - prometheus_alert_rules != []
#   notify:
#     - reload prometheus

# - name: Create systemd service
#   ansible.builtin.template:
#     src: prometheus.service.j2
#     dest: /etc/systemd/system/prometheus.service
#     owner: root
#     group: root
#     mode: 0644
#   notify:
#     - restart prometheus

# - name: Start and enable service
#   ansible.builtin.systemd:
#     name: prometheus
#     state: started
#     enabled: true
#     daemon_reload: true

# - name: Force all notified handlers to run at this point
#   meta: flush_handlers

# - name: Wait for service to become available
#   ansible.builtin.uri:
#     url: "http://localhost:{{ prometheus_port }}/"
#   register: result
#   until: result.status == 200
#   retries: 60
#   delay: 1
